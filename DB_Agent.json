{
  "name": "DB_Agent",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "text"
            },
            {
              "name": "sessionId"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "75b1e982-e98b-4a30-b5e9-cf775866e7e7",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "options": {
          "maxRetries": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        200,
        -200
      ],
      "id": "ef9351d7-bc30-47ce-8509-dcbe17f3c1c0",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "mvQpgkZtqsNRA84u",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=Role:\nYou are DB Agent, an expert assistant responsible for executing changes in a PostgreSQL database. You receive instructions in natural language and transform them into precise database operations.\nTask:\nInterpret the user's request and ensure that changes are correctly applied to the \"product\" table.  \nCheck if the product exists before making changes using **Select_By_Name** to retrieve the product's attributes by its name.  \n\nIf the product exists, **Update** it using **Update** and verify that the **Update** was successfully applied.  \n\nIf the product does not exist, create it using **Insert** and verify that the insertion was successfully executed.  \n\nConfirm the changes by generating a concise response directly in your output, but only after ensuring that the operation was executed correctly.\n\nTools Available:  \n**Select_By_Name**: Query the \"product\" table by product name to retrieve its existing attributes.  \n\n**Update**: Modify an existing product in the database and ensure the **Update** was applied.  \n\n**Insert**: Add a new product to the database if it does not exist, ensuring the quantity matches the user's request.\n\nExecution Logic:  \nAlways query the product first using **Select_By_Name** before modifying it.  \n\nIf the product exists, use **Update** to apply the requested changes and confirm that the **Update** was successfully applied.  \n\nIf the product does not exist, use **Insert** to create it with the specified quantity, then confirm that the insertion was successfully executed.  \n\nBefore generating the confirmation response, ensure that the database operation was actually performed.  \n\nDo not generate a confirmation message unless the change was successfully executed.\n\nResponse Format:\nThe confirmation must be short, clear, and explicitly mention the change. Examples:  \nStock actualizado: Sprite → 10 unidades.  \n\nAñadido \"Coca-Cola\" (12 unidades).  \n\nPrecio cambiado: iPhone → $999.99.  \n\nProducto duplicado fusionado: \"Nike Shoes\" → actualizado en lugar de re-añadido.\n\nKey Considerations:  \nAlways verify that the product exists before modifying it.  \n\nIf using **Update**, ensure that the change was successfully applied.  \n\nIf using **Insert**, confirm that the new product was successfully created.  \n\nOnly confirm changes if they were successfully executed in the database."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        220,
        0
      ],
      "id": "d1c084a1-ce77-41ff-8911-23efe4dc3f48",
      "name": "Nullius AI DB Agent"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "product",
          "mode": "list",
          "cachedResultName": "product"
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "where": {
          "values": [
            {
              "column": "name",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Value', ``, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        160,
        320
      ],
      "id": "c4f97715-f399-4fb2-aa21-abafd43078d2",
      "name": "Select_By_Name",
      "credentials": {
        "postgres": {
          "id": "dnO3p7Dq5udUQp1l",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "product",
          "mode": "list",
          "cachedResultName": "product"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('name', ``, 'string') }}",
            "price": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('price', ``, 'number') }}",
            "stock": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('stock', ``, 'number') }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "price",
              "displayName": "price",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "stock",
              "displayName": "stock",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        340,
        320
      ],
      "id": "4aabf474-1cdd-4fcf-aa89-28b0ffc2a83f",
      "name": "Insert",
      "credentials": {
        "postgres": {
          "id": "dnO3p7Dq5udUQp1l",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "product",
          "mode": "list",
          "cachedResultName": "product"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "price": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('price', ``, 'number') }}",
            "stock": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('stock', ``, 'number') }}",
            "id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('id__using_to_match_', ``, 'number') }}",
            "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('name', ``, 'string') }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "price",
              "displayName": "price",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "stock",
              "displayName": "stock",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        500,
        320
      ],
      "id": "c25581d3-3ede-4783-9395-04b4690d2b3b",
      "name": "Update",
      "credentials": {
        "postgres": {
          "id": "dnO3p7Dq5udUQp1l",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Nullius AI DB Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Nullius AI DB Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Nullius AI DB Agent": {
      "main": [
        []
      ]
    },
    "Select_By_Name": {
      "ai_tool": [
        [
          {
            "node": "Nullius AI DB Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Insert": {
      "ai_tool": [
        [
          {
            "node": "Nullius AI DB Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update": {
      "ai_tool": [
        [
          {
            "node": "Nullius AI DB Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c141c3f3-7e5f-428e-aa77-630ed23e2897",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "86d6130756d46403661eb733f8fe5c2e3923b9c440015366aa3cd74b76f57c5a"
  },
  "id": "C1bf6htNpoReCQMU",
  "tags": []
}