{
  "name": "Inventory_Planner_Agent",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "text"
            },
            {
              "name": "sessionId"
            },
            {
              "name": "organizationId",
              "type": "number"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -780,
        140
      ],
      "id": "c07dc2f5-57b2-4a78-96b4-9605cfbadb2c",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "options": {
          "maxRetries": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        300,
        360
      ],
      "id": "77eeebed-b940-4314-a124-ee2034fad771",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "9FL9g9uowIzkMtus",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('When Executed by Another Workflow').item.json.sessionId }}",
        "tableName": "chat_histories",
        "contextWindowLength": 0
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        480,
        360
      ],
      "id": "468622e4-b570-4f37-a1da-1c3ac1916eb9",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "CgQpQfgjzrWyEoSG",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When Executed by Another Workflow').item.json.text }}",
        "options": {
          "systemMessage": "=Role:\nYou are an operations assistant for small businesses, focused solely on proposing inventory changes.\nRules:  \nOnly suggest inventory changes, nothing else.  \n\nNever modify inventory or show total stock—only propose changes.  \n\nVerify all products before responding.\n\nExecution Flow:  \nAnalyze Input:  \nExtract products and quantities from the current input.  \n\nInterpret \"X más\" (or similar, like \"compré más\", \"otras X\") as a purchase unless specified as sales/losses.  \n\nDetect renaming (\"rename X to Y\") or deletion (\"delete X\").  \n\nAdjust for corrections (e.g., \"actually add X\" or \"reduce by X\").\n\nProcess Products:  \nUse full product names as given, singularized only for querying.  \n\nCombine multiple changes for the same product into a net adjustment.  \n\nCall Select_By_Name once per unique product before responding.\n\nPropose Changes:  \nIf deleting: \"Eliminar producto '{product}'.\"  \n\nIf renaming: \"Renombrar producto '{old_name}' a '{new_name}'.\"  \n\nIf product exists: \"Increase/Reduce stock of '{product}' by {quantity}.\"  \n\nIf similar: \"I couldn’t find '{product}', but there’s '{similar_product}'. Is this it, or create '{product}'?\"  \n\nIf new: \"Register '{product}' with {quantity} units.\"\n\nRespond:  \nStart with a friendly tone (e.g., \"¡Genial!\" for adds, \"¡Qué buena venta!\" for sales, \"Lamento la pérdida\" for losses).  \n\nWrite \"Propuesta:\" once, followed by each product change on a new line with + (add) or - (reduce).  \n\nAsk \"¿Confirmas este cambio?\"  \n\nUse quotes (\"...\") for product names.\n\nTools:  \nSelect_By_Name: Check product existence (input: singular full name; call once per product).\n\n{{ $json.text }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        360,
        140
      ],
      "id": "a2c05b6a-b2a6-4676-953d-3a6c5253ed9e",
      "name": "Nullius AI Inventory Planner Agent"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use this tool to check if a product exists in the inventory by name. You must call this tool for every product mentioned by the user before generating any response. If the product does not exist, this tool will return similar matches (if available) or confirm that no match was found.",
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "products",
          "mode": "list",
          "cachedResultName": "products"
        },
        "limit": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Limit', ``, 'number') }}",
        "where": {
          "values": [
            {
              "column": "name",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Value', ``, 'string') }}"
            },
            {
              "column": "organization_id",
              "value": "={{ $('When Executed by Another Workflow').item.json.organizationId }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        660,
        360
      ],
      "id": "d2ae1ef3-9540-4a4b-9572-44208b3e4f7f",
      "name": "Select_By_Name",
      "credentials": {
        "postgres": {
          "id": "CgQpQfgjzrWyEoSG",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "chat_histories",
          "mode": "list",
          "cachedResultName": "chat_histories"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "session_id",
              "value": "={{ $('When Executed by Another Workflow').item.json.sessionId }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -580,
        140
      ],
      "id": "df9623a2-df3d-42a3-a805-782b01fa4d32",
      "name": "Obtain Last Response",
      "credentials": {
        "postgres": {
          "id": "CgQpQfgjzrWyEoSG",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "inputText": "={{ $json.message.content }}",
        "categories": {
          "categories": [
            {
              "category": "About Inventory Planning",
              "description": "The message contains a proposed inventory change that requires confirmation. It lists modifications such as stock additions, removals, or new product registrations but does not indicate that the changes have already been executed."
            },
            {
              "category": "Not About Inventory Planning",
              "description": "The message contains a confirmation of changes applied or whatever that is not a proposed inventory change that requires confirmation "
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "Please classify the text provided by the user into one of the following categories: {categories}, and use the provided formatting instructions below. Don't explain, and only output the json.\n\nYou can only classify the text in one category"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        -380,
        140
      ],
      "id": "71f35c29-0734-4568-a1f1-c90b04e56167",
      "name": "Text Classifier"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a723c98c-d9ff-4b7b-9b8e-77888b3ff325",
              "name": "text",
              "value": "=The previous proposal was: \n\"\n{{ $json.message.content }}\n\"\n\n- Combine prior and current changes for the same product into a net adjustment (e.g., additions, reductions, or corrections like \"actually add X\").  \n- Interpret \"X más\" (or similar, like \"compré más\") as adding to the last proposed product if applicable.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        0
      ],
      "id": "f6f4f37a-fc0e-4c4c-abdc-e7aa178d488e",
      "name": "Prompt"
    },
    {
      "parameters": {
        "model": "google/gemini-2.0-flash-exp:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -380,
        360
      ],
      "id": "410ba36c-3052-438f-9239-6e60a4c15c07",
      "name": "OpenRouter Chat Model1",
      "credentials": {
        "openRouterApi": {
          "id": "9FL9g9uowIzkMtus",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "eecfc05e-884a-45a4-9f1e-689bc233a023",
              "name": "text",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        240
      ],
      "id": "9b69f007-c028-4003-8b00-4ffbb7b2f800",
      "name": "Prompt1",
      "alwaysOutputData": true
    }
  ],
  "pinData": {},
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Obtain Last Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Nullius AI Inventory Planner Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Nullius AI Inventory Planner Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Select_By_Name": {
      "ai_tool": [
        [
          {
            "node": "Nullius AI Inventory Planner Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Obtain Last Response": {
      "main": [
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prompt1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt": {
      "main": [
        [
          {
            "node": "Nullius AI Inventory Planner Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Prompt1": {
      "main": [
        [
          {
            "node": "Nullius AI Inventory Planner Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "90711eb5-7d3f-4446-a686-7e6e823b0e3d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "eba7d039e685d4faa953c65a15f8191650dbc423f404d714b7685bdd9188bc2a"
  },
  "id": "shbFAOcbqNGdAaWl",
  "tags": []
}